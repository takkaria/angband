# File: Makefile.ui2
#
# Compiles Angband with textui2.
# This makefile requires GNU make.
# Assumes Angband was configured properly
# (see -DHAVE_CONFIG_H and autoconf.h)

# Invoke make with these arguments
.PHONY: default all clean args
default: all

### Basic compiler stuff ###

CC := gcc

CFLAGS := \
	-std=c99 \
	-g -O0 \
	-Wall -Wextra -Wno-unused-parameter -Wpedantic \
	-fsanitize=address -fno-omit-frame-pointer -fsanitize=undefined

LDFLAGS := -lm

CPPFLAGS := -I. -DHAVE_CONFIG_H

### Modules ###

MAINOBJS := main2.o

# Support ncurses (widestring) console mode
CPPFLAGS += -DUSE_NCURSES -I/usr/include/ncursesw
LDFLAGS  += -lncursesw
MAINOBJS += main2-ncurses.o

# Support SDL2 frontend

# Path where sdl2-config uitility can be found
SDL2_CONFIG := /home/vic/misc/SDL2/bin/sdl2-config

SDL2_CPPFLAGS := $(shell $(SDL2_CONFIG) --cflags)
SDL2_LDFLAGS  := $(shell $(SDL2_CONFIG) --libs)

CPPFLAGS += -DUSE_SDL2 $(SDL2_CPPFLAGS)
LDFLAGS  += $(SDL2_LDFLAGS) -lSDL2_ttf -lSDL2_image
MAINOBJS += main2-sdl2.o

## Stats pseudo-frontend
#CPPFLAGS += -DUSE_STATS
#MAINOBJS += main-stats.o

## Support SDL2_mixer for sound
CPPFLAGS += -DSOUND -DUSE_SOUND_SDL2 $(SDL2_CPPFLAGS)
LDFLAGS  += $(SDL2_LDFLAGS) -lSDL2_mixer
MAINOBJS += sound2-sdl2.o

### Targets and objects ###

# Makefile.src contains an up-to-date set of
# object files to compile, so we include it;
# (it defines BASEOBJS and PROGNAME)
include Makefile.src.ui2

# Object definitions
OBJS := $(BASEOBJS) $(MAINOBJS)

# Makefile.dep contains commands that
# generate dependency info from OBJS
include Makefile.dep.ui2

# Name of binary
EXE := $(PROGNAME)

# View module arguments
args:
	@echo CFLAGS = $(CFLAGS)
	@echo LDFLAGS = $(LDFLAGS)
	@echo CPPFLAGS = $(CPPFLAGS)
	@echo MAINOBJS = $(MAINOBJS)
	@echo OBJS = $(OBJS)

# Compile object files
%.o: %.c
	@printf "%10s %-20s\n" CC $<
	@$(CC) $(CPPFLAGS) $(CFLAGS) -o $@ -c $<

# Link the binary
$(EXE): $(OBJS)
	@printf "%10s %-20s\n" LINK $@
	@$(CC) $(CFLAGS) -o $(EXE) $(OBJS) $(LDFLAGS) 

# Compile the game
all: $(EXE)

# Clean up old junk
clean:
	rm -f $(OBJS) ./$(EXE)
